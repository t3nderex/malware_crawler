from fake_useragent import UserAgent
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
import os

from anyrun import Anyrun

def get_current_path():
    return os.path.dirname(os.path.abspath(__file__))


def set_driver(download_path = get_current_path()+"\samples", w_width=1400, w_height=900):
    global g_download_path 
    g_download_path = download_path
    if not os.path.exists(download_path):
        os.makedirs(download_path)
    
    ua = UserAgent(use_cache_server=True)
    driver_opts = webdriver.ChromeOptions()
    # driver_opts.add_argument('headless')
    driver_opts.add_experimental_option('excludeSwitches', ['enable-logging'])
    
    preferences = {
                "profile.default_content_settings.popups": 0,
                "download.default_directory": download_path,
                "directory_upgrade": True
                }
    driver_opts.add_experimental_option('prefs', preferences)    

    driver_opts.add_argument(f"user-agent={ua.random}")
    # driver_opts.add_argument("user-agent=Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko")
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=driver_opts)
    driver.set_window_size(w_width,w_height)
    return driver


def get_account_from_txt(file):
    with open(file, "r") as f:
        account = f.readlines()
        id = account[0]
        pw = account[1]
    return id, pw


if __name__ == '__main__':
    ANYRUN = 'https://app.any.run/submissions'
    account = './account.txt'
    id, pw = get_account_from_txt(account)
                    
    driver = set_driver()
    
    anyrun = Anyrun(driver)
    driver.implicitly_wait(5)
    driver.get(ANYRUN)                  # 브라우져 켜기
    anyrun.accepct_cookie()             # 쿠키 허용
    anyrun.login(id, pw)                # 로그인
    anyrun.get_samples()

    
    
