from fake_useragent import UserAgent
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.select import Select
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By

from time import sleep
import os


class Anyrun():
    def __init__(self):
        pass
    
    
    def login(self, id,pw):
        login_btn_xpath = '/html/body/nav/ul[2]/li[4]'
        input_id_xpath = '//*[@id="at-field-username_and_email"]'
        input_pw_xpath = '//*[@id="at-field-password"]'
        signin_btn_xpath = '//*[@id="at-btn"]'

        driver.find_element(By.XPATH, login_btn_xpath).click()
        driver.find_element(By.XPATH, input_id_xpath).send_keys(id)
        driver.find_element(By.XPATH, input_pw_xpath).send_keys(pw)
        driver.find_element(By.XPATH, signin_btn_xpath).click()


    def accepct_cookie(self):
        accept_cookie_btn_xpath = '//*[@id="cookies"]/div/a[2]'
        driver.find_element(By.XPATH, accept_cookie_btn_xpath).click()
    

    def set_filter_and_search(self, file_type = 'Adobe PDF', country_type = 'Korea, Republic of'):
        filter_search_btn = '//*[@id="historySearchBtn"]'
        select_extension = '//*[@id="searchHistByExt"]'
        select_country = '//*[@id="countrySearch"]'         
        filter_btn = '//*[@id="history-filterBtn"]'         
        sleep(2)
        # 필터(클릭)
        driver.find_element_by_xpath(filter_btn).click()               

        # 파일 타입 선택
        select = Select(driver.find_element_by_xpath(select_extension))
        sleep(2)
        select.select_by_visible_text(file_type)

        # 국가 선택
        select = Select(driver.find_element_by_xpath(select_country))     
        sleep(2)
        select.select_by_visible_text(country_type)            

        # 검색
        driver.find_element_by_xpath(filter_search_btn).click()        
        return True
    



def get_current_path():
    return os.path.dirname(os.path.abspath(__file__))


def set_driver(download_path = get_current_path()+"\samples", w_width=1400, w_height=900):
    if not os.path.exists(download_path):
        os.makedirs(download_path)
    

    ua = UserAgent(use_cache_server=True)
    driver_opts = webdriver.ChromeOptions()
    driver_opts.add_experimental_option('excludeSwitches', ['enable-logging'])
    
    preferences = {
                "profile.default_content_settings.popups": 0,
                "download.default_directory": download_path,
                "directory_upgrade": True
                }
    driver_opts.add_experimental_option('prefs', preferences)    

    driver_opts.add_argument(f"user-agent={ua.random}")
    # driver_opts.add_argument("user-agent=Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko")
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=driver_opts)
    driver.set_window_size(w_width,w_height)
    return driver


def get_account_from_txt(file):
    with open(file, "r") as f:
        account = f.readlines()
        id = account[0]
        pw = account[1]
    return id, pw


if __name__ == '__main__':
    ANYRUN = 'https://app.any.run/submissions'
    account = './malware_crawler/account.txt'
    id, pw = get_account_from_txt(account)
    
    anyrun = Anyrun()
    
    driver = set_driver()

    driver.get(ANYRUN)                  # 브라우져 켜기
    anyrun.accepct_cookie()             # 쿠키 허용
    anyrun.login(id, pw)                # 로그인

    anyrun.set_filter_and_search(file_type = 'Adobe PDF', country_type = 'Korea, Republic of')
    

